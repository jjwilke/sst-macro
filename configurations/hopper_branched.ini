congestion_model = pisces
arbitrator = cut_through
accuracy_parameter = 4096
amm_model = amm4
router = minimal

switch {
 name = pisces_branched
 geometry = 4 12
 arbitrator = cut_through
 input {
  bandwidth = 75GB/s
  send_latency = 0ns
  credit_latency = 0ns
  credits = 32KB
 }
 xbar {
  bandwidth = 1.2TB/s
  send_latency = 100ns
  credit_latency = 100ns
  credits = 1024KB
 }
 output {
  bandwidth = 50GB/s
  send_latency = 0ns
  credit_latency = 0ns
  credits = 32KB
 }
 link {
  bandwidth = 12.5GB/s
  send_latency = 100ns
  credit_latency = 100ns
  credits = 32KB
  mtu = 4096
 }
 ejection {
  bandwidth = 12.5GB/s
  send_latency = 100ns
  credit_latency = 100ns
 }
 router {
  name = minimal
 }
}

topology {
 name = torus
 geometry = 17,8,24
 redundant = 8 4 8
 concentration = 2
 injection_redundant = 8
}


node {
 app1 {
  mpi {
   max_eager_msg_size = 16384
   smp_single_copy_size = 16384
  }
 }
 memory {
  bandwidth = 10GB/s
  latency = 15ns
  mtu = 10000000
  max_single_bandwidth = 6GB/s
 }
 name = simple
 frequency = 2.1ghz
 ncores = 24
 nsockets = 4
 nic {
  injection {
   redundant = 8
   bandwidth = 10GB/s
   latency = 1us
  }
 }
 proc {
  parallelism = 1.65
 }
 lib_compute_unroll_loops = 1.0
}
