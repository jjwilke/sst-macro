
namespace ns {
 namespace ns2 {
  int x = 10;void* __ptr_x = &x; int __sizeof_x = sizeof(x); extern int __offset_x; 
 }
}

namespace ns {
int x = 10;void* __ptr_x = &x; int __sizeof_x = sizeof(x); extern int __offset_x; 
}

void fxn()
{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac___ns__ns2__x=(int*)(sstmac_global_data + ::ns::ns2::__offset_x); int* sstmac___ns__x=(int*)(sstmac_global_data + ::ns::__offset_x); {
  (*sstmac___ns__x) += 5;
  (*sstmac___ns__ns2__x) -= 3;
 }}
#include <sstmac/software/process/global.h>
#include <sstmac/software/process/memoize.h>

namespace ns {
 extern int __sizeof_x;
 extern void* __ptr_x;
 int __offset_x = sstmac::GlobalVariable::init(__sizeof_x,"x",__ptr_x,false);
 namespace ns2 {
  extern int __sizeof_x;
  extern void* __ptr_x;
  int __offset_x = sstmac::GlobalVariable::init(__sizeof_x,"x",__ptr_x,false);
 }
}
