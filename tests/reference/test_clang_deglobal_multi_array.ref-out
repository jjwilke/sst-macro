extern int y[][4]; extern int __offset_y; typedef int type_y[][4];

int x[][2] = { {1,2}, {2,3} };void* __ptr_x = &x; int __sizeof_x = sizeof(x); extern int __offset_x; typedef int array_type_x[2][2];
int y[3][4];void* __ptr_y = &y; int __sizeof_y = sizeof(y); extern int __offset_y; typedef int array_type_y[3][4];
extern int z[][2]; extern int __offset_z; typedef int type_z[][2];
static int b[2][2];void* __ptr_xyzb = &b; int __sizeof_xyzb = sizeof(b); extern int __offset_xyzb; typedef int array_type_b[2][2];

 extern int __offset_xyz_fxna; int __sizeof_xyz_fxna = sizeof(int[3][5]); void fxn()
{ char* sstmac_global_data = get_sstmac_global_data();array_type_y* sstmac_y=(array_type_y*)(sstmac_global_data + __offset_y); array_type_x* sstmac_x=(array_type_x*)(sstmac_global_data + __offset_x); type_z* sstmac_z=(type_z*)(sstmac_global_data + __offset_z); array_type_b* sstmac_xyzb=(array_type_b*)(sstmac_global_data + __offset_xyzb); {
  static int a[3][5];static int sstmac_inited_a = 0;if (!sstmac_inited_a){  sstmac_init_global_space(&a,__sizeof_xyz_fxna,__offset_xyz_fxna,0);  sstmac_inited_a = 1; }typedef int array_type_a[3][5];array_type_a* sstmac_xyz_fxna=(array_type_a*)(sstmac_global_data + __offset_xyz_fxna); 
  (*sstmac_xyz_fxna)[0][0] = 1;
  (*sstmac_x)[0][1] = 2;
  (*sstmac_y)[1][1] = 3;
  (*sstmac_z)[2][0] = 5;
  (*sstmac_xyzb)[1][1] = 8;
 }}
#include <sstmac/software/process/global.h>
#include <sstmac/software/process/memoize.h>

extern int __sizeof_x;
extern void* __ptr_x;
int __offset_x = sstmac::GlobalVariable::init(__sizeof_x,"x",__ptr_x,false);
extern int __sizeof_xyz_fxna;
int __offset_xyz_fxna = sstmac::GlobalVariable::init(__sizeof_xyz_fxna,"xyz_fxna",nullptr,false);
extern int __sizeof_xyzb;
extern void* __ptr_xyzb;
int __offset_xyzb = sstmac::GlobalVariable::init(__sizeof_xyzb,"xyzb",__ptr_xyzb,false);
extern int __sizeof_y;
extern void* __ptr_y;
int __offset_y = sstmac::GlobalVariable::init(__sizeof_y,"y",__ptr_y,false);
